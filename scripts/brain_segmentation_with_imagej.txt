//vars for macro communication
var cwd = "";
var file_list_path = "";
var pointer_path = "";
var save_folder = "";
var save_name = "";
var image_source_folder = "";


function getPointer(){
  filestring = File.openAsString(pointer_path);
  i = parseInt(filestring);
  return i;
  }


function setPointer(i){
    f = File.open(pointer_path);
    s = "" + i;
    print(f, s);
    File.close(f);
    }


function getName(i){
    file_string = File.openAsString(file_list_path);
    names = split(file_string, "\n");
    name = names[i];
    save_name = name;
    }


function open32bitImg(){
    path = image_source_folder + save_name;
    cmd = "open="+ path + " image=[32-bit Unsigned] width=256 height=256 little-endian";
    run("Raw...", cmd);
    }


function getLineRotationDegs(){
    Roi.getCoordinates(x, y);
    if (y[0] > y[1]) {dy = y[0] - y[1]; dx = x[0] - x[1];}
    else             {dy = y[1] - y[0]; dx = x[1] - x[0];}
    degs = -atan2(dy, dx)/PI*180 + 90;
    return degs;
    }


function flashLog(str_){
    print(str_);
    selectWindow("Log");
    run("Close");
    }


function closeResults(){
    selectWindow("Results");
    run("Close");
    }


//=========== macros ================

macro 'select working directory [p]'{
    some_file = File.openDialog("select any file in a project directory");
    cwd = File.getParent(some_file) + "/";
    file_list_path = cwd + "ij_img_list.txt";
    pointer_path = cwd + "ij_pointer.txt";
    save_folder = cwd + "pre_meta/";
    image_source_folder = cwd +  "img_raw/";
    }


macro 'initiate sequence[i]'{
    i = getPointer();
    getName(i);
    open32bitImg();
    setTool("rotrect");
    }


macro 'next in sequence[g]' {
    close();
    i = getPointer();
    i = i + 1;
    getName(i);
    open32bitImg();
    setPointer(i);
    setTool("rotrect");
    }


macro 'capture rotation [r]' {
    degs = getLineRotationDegs();
    cmd = "angle=" + degs + " grid=0 interpolation=Bicubic";
    run("Rotate... ", cmd);
    path =  save_folder + save_name + "_rotation.txt";
    f = File.open(path);
    print(f, degs);
    File.close(f);
    setTool("rectangle");
    }


macro 'capture left hemisphere[q]'{
    path = save_folder + save_name + "_lbbox.txt";
    saveAs("Save XY Coordinates...", path);
    flashLog("LEFT");    
    }


macro 'capture right hemisphere[w]'{
    path = save_folder + save_name + "_rbbox.txt";
    saveAs("XY Coordinates", path);
    flashLog("RIGT");
    }


macro 'capture background[c]'{
    path = save_folder + save_name + "_refzone.txt";
    saveAs("Save XY Coordinates...", path);
    path = save_folder + save_name + "_reference.txt";
    run("Measure");
    m = getResult("Mean", 0);
    f = File.open(path);
    print(f, m);
    File.close(f);
    closeResults();
    flashLog("BACKGROUND");
    setTool("line");
    }


macro 'print status [o]'{
    print("cwd: " + cwd);
    print("file list path: " + file_list_path);
    print("pointer path: " + pointer_path);
    print("save folder: " + save_folder);
    print("current image name: " + save_name);
    print("image source folder: " + image_source_folder);
    i = getPointer();
    print("pointer: " + i);
    }
